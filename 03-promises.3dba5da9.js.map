{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,0BAKjBE,EAAXL,EAAKC,OADPK,SAAYC,EAAKF,EAALG,MAAOC,EAAIJ,EAAJK,KAAMC,EAAMN,EAANO,OAgB3BZ,EAAKC,OAAOY,iBAAiB,UAE7B,SAA0BC,G,kBAf1B,IAAuBC,EAAUC,EACzBC,GADeF,EAyBLG,EAzBeF,EAyBZG,EAxBbF,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLR,EACFM,EAAQ,CAAER,WAAUP,MAAAQ,IAEpBQ,EAAO,CAAET,WAAUP,MAAAQ,MAEpBA,OAiBAU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUa,EAAKD,EAALnB,MACjBV,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANH,EAAM,UAE9DI,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUkB,EAAKN,EAALnB,MAClBV,EAAA+B,OAAOK,QAAQ,sBAAuCH,OAAfhB,EAAS,QAAYgB,OAANE,EAAM,UAE7DE,SAAQ,WACHjB,IAAMkB,IACRpC,EAAKI,MAAMiC,UAAW,MAG5BlB,GAAYmB,GArBdxB,EAAEyB,iBAEFvC,EAAKI,MAAMiC,UAAW,EAMtB,IAJA,IAAIlB,EAAWqB,OAAOjC,EAAMkC,OACtBH,EAAUE,OAAO/B,EAAKgC,OACtBL,EAAYI,OAAO7B,EAAO8B,OAEvBC,EAAI,EAAGA,GAAKN,EAAWM,GAAK,EAACC,EAAAD,GAetC5B,EAAE8B,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst {\n  elements: { delay, step, amount },\n} = refs.formEl;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(e) {\n  e.preventDefault();\n\n  refs.btnEl.disabled = true;\n\n  let delayVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amountVal = Number(amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        if (i === amountVal) {\n          refs.btnEl.disabled = false;\n        }\n      });\n    delayVal += stepVal;\n  }\n  e.currentTarget.reset();\n}\n\n// ---------------------------- v1 ---------------------------------\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n\n// let inpDelay = null;\n// let inpStep = null;\n// let inpAmount = null;\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n\n//   const {\n//     elements: { delay, step, amount },\n//   } = e.currentTarget;\n\n//   inpDelay = Number(delay.value);\n//   inpStep = Number(step.value);\n//   inpAmount = Number(amount.value);\n\n//   for (let i = 1; i <= inpAmount; i += 1) {\n//     createPromise(i, inpDelay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n\n//     inpDelay += inpStep;\n//   }\n\n//   e.currentTarget.reset();\n// }\n\n// refs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","btnEl","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","addEventListener","e","position","delay1","shouldResolve","i","delayVal","Math","random","Promise","resolve","reject","setTimeout","then","param","delay2","Notify","success","concat","catch","delay3","failure","finally","amountVal","disabled","stepVal","preventDefault","Number","value","i1","_loop","currentTarget","reset"],"version":3,"file":"03-promises.3dba5da9.js.map"}
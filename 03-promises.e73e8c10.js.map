{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,2BAI9BE,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IACvBX,EAAKC,OAET,SAASW,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUP,MAAAQ,IAEpBM,EAAO,C,SAAEP,EAAUP,MAAAQ,MAEpBA,MAIPd,EAAKC,OAAOqB,iBAAiB,UAE7B,SAA0BC,GACxBA,EAAEC,iBAEFxB,EAAKI,MAAMqB,UAAW,EAEtB,IAAIC,EAAWC,OAAOpB,EAAMqB,OAC5B,MAAMC,EAAUF,OAAOlB,EAAKmB,OACtBE,EAAYH,OAAOhB,EAAOiB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnCnB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAUP,MAAA2B,MACjBnC,EAAAoC,OAAOC,QAAQ,uBAAqBtB,QAAiBoB,UAEtDG,OAAM,EAACvB,SAAEA,EAAUP,MAAA+B,MAClBvC,EAAAoC,OAAOI,QAAQ,sBAAoBzB,QAAiBwB,UAErDE,SAAQ,KACHR,IAAMD,IACR9B,EAAKI,MAAMqB,UAAW,MAG5BC,GAAYG,EAEdN,EAAEiB,cAAcC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst {\n  elements: { delay, step, amount },\n} = refs.formEl;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(e) {\n  e.preventDefault();\n\n  refs.btnEl.disabled = true;\n\n  let delayVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amountVal = Number(amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        if (i === amountVal) {\n          refs.btnEl.disabled = false;\n        }\n      });\n    delayVal += stepVal;\n  }\n  e.currentTarget.reset();\n}\n\n// ---------------------------- v1 ---------------------------------\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n\n// let inpDelay = null;\n// let inpStep = null;\n// let inpAmount = null;\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n\n//   const {\n//     elements: { delay, step, amount },\n//   } = e.currentTarget;\n\n//   inpDelay = Number(delay.value);\n//   inpStep = Number(step.value);\n//   inpAmount = Number(amount.value);\n\n//   for (let i = 1; i <= inpAmount; i += 1) {\n//     createPromise(i, inpDelay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n\n//     inpDelay += inpStep;\n//   }\n\n//   e.currentTarget.reset();\n// }\n\n// refs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","btnEl","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","disabled","delayVal","Number","value","stepVal","amountVal","i","then","delay2","Notify","success","catch","delay3","failure","finally","currentTarget","reset"],"version":3,"file":"03-promises.e73e8c10.js.map"}